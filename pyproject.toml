[project]
name = "pydantic-settings-demo"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "pydantic>=2.11.9",
    "pydantic-settings>=2.10.1",
]

[tool.pyright]
pythonVersion = "3.13"
typeCheckingMode = "strict"
verboseOutput = true
extraPaths = ["src", "backend", "root", "project_root"]
exclude = [".venv", "**/.venv/**", "**/temp", "**/tmp"]

[tool.pytest.ini_options]
pythonpath = "backend"
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
python_files = ["test", "*_test.py", "*_tests.py", "test_*.py"]


[tool.coverage.run]
omit = [
  "*/temp/*",
  "*/tmp/*",
  "*/tests/*",
  "*/test*",
  "**/test_*.py",
  "**/__init__.py",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
  ".idea",
  "temp",
  "../temp",
  ".coverage",
  ".env",
  "cov_html",
]

# extend-exclude = ["./tests/", "**/tests/", "tests", "**/test_*.py"]

# Same as Black.
line-length = 79
indent-width = 4

# Assume Python 3.12
target-version = "py312"

# Enumerate all fixed violations.
show-fixes = true

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["ALL"]
ignore = [
  "Q",
  "D",
  "CPY",
  "N815",
  "TD002",
  "TD003",
  "RUF003",
  "TID252",
  "DOC",
  "FBT001",
  "FBT002",
  "S101",
  "INP001",
  "FIX",
  "PLR0917",
  "PLR0913",
  "T201",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["COM", "F401", "FA102", "I", "UP007", "RUF022", "W292"]
unfixable = ["B", "RUF001"]

logger-objects = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[dependency-groups]
dev = [
    "ruff>=0.13.0",
]

[tool.ruff.lint.flake8-bandit]
hardcoded-tmp-directory = ["/tmp", "/temp", "../temp", "../tmp"]

[tool.ruff.lint.isort]
force-single-line = true
case-sensitive = true
relative-imports-order = "closest-to-furthest"
no-lines-before = []
# lines-after-imports = 2
lines-between-types = 1
known-first-party = ["src", "infrastructure", "domain", "core", "service_layer"]
